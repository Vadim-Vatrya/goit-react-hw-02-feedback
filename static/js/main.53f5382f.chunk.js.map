{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistic/Statistic.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","key","name","onClick","shortid","Notification","message","Statistic","good","neutral","bad","total","positivePercentage","Section","title","children","App","state","props","initialGood","initialNeutral","initialBad","countTotalFeedback","handleFeedback","event","target","textContent","setState","prevState","countPositiveFeedback","Math","round","this","Object","keys","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAwBeA,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAGEC,KAAMD,EACNE,QAASJ,EAJX,SAMGE,GALIG,aCCEC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCyB3BC,EAxBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAChB,mCACGD,EACC,+BACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcN,QAAQ,yBCAbO,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCCCC,E,4MAaJC,MAAQ,CACNT,KAAM,EAAKU,MAAMC,YACjBV,QAAS,EAAKS,MAAME,eACpBV,IAAK,EAAKQ,MAAMG,Y,EAGlBC,mBAAqB,WAAO,IAAD,EACM,EAAKL,MAEpC,OAHyB,EACjBT,KADiB,EACXC,QADW,EACFC,K,EAKzBa,eAAiB,SAACC,GAChB,IAAMtB,EAAOsB,EAAMC,OAAOC,YAC1B,EAAKC,UAAS,SAACC,GAAD,sBAAmB1B,EAAO0B,EAAU1B,GAAQ,O,EAG5D2B,sBAAwB,WAAO,IAAD,EACG,EAAKZ,MAA5BT,EADoB,EACpBA,KAAMC,EADc,EACdA,QAASC,EADK,EACLA,IAIvB,OAHgCoB,KAAKC,MAClCvB,GAAQA,EAAOC,EAAUC,GAAQ,KAAO,I,4CAK7C,WAAU,IAAD,EACwBsB,KAAKf,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBY,EAAqBU,KAAKV,mBAC1BO,EAAwBG,KAAKH,sBAC7B/B,EAAUmC,OAAOC,KAAKF,KAAKf,OACjC,OACE,gCACE,cAAC,EAAD,CAASH,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEhB,QAASA,EACTC,gBAAiBiC,KAAKT,mBAI1B,cAAC,EAAD,CAAST,MAAO,aAAhB,SACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBAAoBiB,e,GA1DdM,aAAZnB,EACGoB,aAAe,CACpBjB,YAAa,EACbC,eAAgB,EAChBC,WAAY,GA8DDL,QCrEfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.53f5382f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    {options.map((key) => (\r\n      <button\r\n        key={shortid()}\r\n        // className={styles.btn}\r\n        name={key}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {key}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification\";\r\n\r\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    {total ? (\r\n      <ul>\r\n        <li>Good:{good}</li>\r\n        <li>Neutral:{neutral}</li>\r\n        <li>Bad:{bad}</li>\r\n        <li>Total:{total}</li>\r\n        <li>Positive Feedback:{positivePercentage}%</li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistic from \"./components/Statistic\";\nimport Section from \"./components/Section\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  static propTypes = {\n    initialGood: PropTypes.number,\n    initialNeutral: PropTypes.number,\n    initialBad: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  handleFeedback = (event) => {\n    const name = event.target.textContent;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countPositiveFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const percentPositiveFeedback = Math.round(\n      (good / (good + neutral + bad)) * 100 || 0\n    );\n    return percentPositiveFeedback;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = this.countTotalFeedback;\n    const countPositiveFeedback = this.countPositiveFeedback;\n    const options = Object.keys(this.state);\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedback()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}